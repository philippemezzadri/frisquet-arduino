esphome:
  name: boiler
  includes:
  - custom_component.h

esp32:
  board: esp32dev
  framework:
    type: arduino

# Enable logging
logger:
  level: DEBUG

# Enable Home Assistant API
api:

ota:
  password: "86d8d705bb585eaf7a68c592a025884c"

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Boiler Fallback Hotspot"
    password: "tzTyXUqS2i2e"

captive_portal:

web_server:
  port: 80

dallas:
  - pin: GPIO26

sensor:
- platform: homeassistant
  id: current_temperature
  entity_id: sensor.aqara_salon_temperature
  filters:
    heartbeat: 30s

- platform: pid
  name: "Boiler water temperature setpoint"
  type: HEAT
  unit_of_measurement: "°C"

- platform: dallas
  address: 0xA2032131AB675C28
  name: "Boiler Inlet Water Temperature"

- platform: dallas
  address: 0xAB03213190136128
  name: "Boiler Return Water Temperature"   
   
climate:
  - platform: pid
    id: pid_climate
    name: "PID Climate Controller"
    sensor: current_temperature
    default_target_temperature: 20°C
    heat_output: boiler_cmd
    control_parameters:
      kp: 0.49460
      ki: 0.00487
      kd: 12.56301
    visual:
      min_temperature: 7 °C
      max_temperature: 28 °C
      temperature_step: 0.5 °C

switch:
  - platform: template
    name: "PID Climate Autotune"
    turn_on_action:
      - climate.pid.autotune: pid_climate

output:
- platform: custom
  type: float
  lambda: |-
    auto boiler_float_output = new FrisquetBoilerFloatOutput();
    App.register_component(boiler_float_output);
    return {boiler_float_output};
  outputs:
    id: boiler_cmd
  